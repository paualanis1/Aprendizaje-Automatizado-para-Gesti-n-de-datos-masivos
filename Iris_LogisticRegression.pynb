{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1JjuCdj8iQW4YCLh_TzrmvMg7Y-KWfOkP","timestamp":1718766227484}],"authorship_tag":"ABX9TyNQLeFUOnkrXJ14XyPG7Z7D"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.datasets import load_iris\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"lA6UZamYc6LT","executionInfo":{"status":"ok","timestamp":1718766371179,"user_tz":360,"elapsed":4946,"user":{"displayName":"Pau Alanis","userId":"02880279731847047844"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["# Cargar el conjunto de datos de Iris\n","iris = load_iris()\n","df = pd.DataFrame(data=iris.data, columns=iris.feature_names)\n","df['species'] = iris.target\n","\n","# Filtrar las clases para tener un problema de clasificación binaria\n","df = df[df['species'] != 2]\n","df['species'] = df['species'].apply(lambda x: 1 if x == 1 else 0)\n","\n","# Mostrar las primeras filas del conjunto de datos\n","print(df.head())\n","\n","# Selección de características y variable objetivo\n","X = df[['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)']]\n","y = df['species']\n","\n","# División de los datos en conjuntos de entrenamiento y prueba\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oCnwbwN7c6-m","executionInfo":{"status":"ok","timestamp":1718766393978,"user_tz":360,"elapsed":238,"user":{"displayName":"Pau Alanis","userId":"02880279731847047844"}},"outputId":"d4b2a38a-9152-4745-947d-fb39e5387659"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["   sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)  \\\n","0                5.1               3.5                1.4               0.2   \n","1                4.9               3.0                1.4               0.2   \n","2                4.7               3.2                1.3               0.2   \n","3                4.6               3.1                1.5               0.2   \n","4                5.0               3.6                1.4               0.2   \n","\n","   species  \n","0        0  \n","1        0  \n","2        0  \n","3        0  \n","4        0  \n"]}]},{"cell_type":"code","source":["# Crear el modelo de regresión logística\n","model = LogisticRegression()\n","\n","# Entrenar el modelo\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"kttSJSmsdL9U","executionInfo":{"status":"ok","timestamp":1718766402186,"user_tz":360,"elapsed":175,"user":{"displayName":"Pau Alanis","userId":"02880279731847047844"}},"outputId":"e1c58956-b91c-41bd-c8d8-a15200b8f383"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# Predicciones\n","y_train_pred = model.predict(X_train)\n","y_test_pred = model.predict(X_test)\n","\n","# Métricas de evaluación\n","print(f\"Precisión en entrenamiento: {accuracy_score(y_train, y_train_pred)}\")\n","print(f\"Precisión en prueba: {accuracy_score(y_test, y_test_pred)}\")\n","print(\"Matriz de confusión:\")\n","print(confusion_matrix(y_test, y_test_pred))\n","print(\"Informe de clasificación:\")\n","print(classification_report(y_test, y_test_pred))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e-8dWFySdPkB","executionInfo":{"status":"ok","timestamp":1718766403916,"user_tz":360,"elapsed":188,"user":{"displayName":"Pau Alanis","userId":"02880279731847047844"}},"outputId":"c3a192d3-ee34-412a-f66c-cb30e1e0c1b1"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Precisión en entrenamiento: 1.0\n","Precisión en prueba: 1.0\n","Matriz de confusión:\n","[[12  0]\n"," [ 0  8]]\n","Informe de clasificación:\n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00        12\n","           1       1.00      1.00      1.00         8\n","\n","    accuracy                           1.00        20\n","   macro avg       1.00      1.00      1.00        20\n","weighted avg       1.00      1.00      1.00        20\n","\n"]}]},{"cell_type":"code","source":["# Gráfico de matriz de confusión\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(confusion_matrix(y_test, y_test_pred), annot=True, fmt='d', cmap='Blues')\n","plt.xlabel('Predicciones')\n","plt.ylabel('Valores Reales')\n","plt.title('Matriz de Confusión')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"shjv_SBhdSb6","executionInfo":{"status":"ok","timestamp":1718766409144,"user_tz":360,"elapsed":540,"user":{"displayName":"Pau Alanis","userId":"02880279731847047844"}},"outputId":"221fd6d8-dbbd-47f4-e24b-a767bb9ec6be"},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}